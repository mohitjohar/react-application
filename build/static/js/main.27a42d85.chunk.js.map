{"version":3,"sources":["pages/LoginForm.js","pages/Register.js","pages/CRUDSystem.js","pages/CreateForm.js","pages/UpdateForm.js","pages/DeleteForm.js","components/apicrud/DateList.js","components/apicrud/CreateForm.js","components/apicrud/UpdateForm.js","components/apicrud/Loader.js","components/Paginationl.js","pages/Apicrud.js","pages/Pagination.js","pages/UpdateItem.js","pages/Details.js","components/PostSlide.js","components/PostSlider.js","components/PostSlider1.js","pages/Page1.js","pages/Logout.js","serviceWorker.js","components/Header.js","index.js"],"names":["LoginForm","p","localStorage","token","history","push","useState","email","setEmail","password","setPassword","console","log","className","onSubmit","fetch","method","body","JSON","stringify","headers","then","res","json","setItem","window","location","reload","alert","error","action","type","name","placeholder","value","onChange","e","target","to","RegisterForm","state","handleSubmit","preventDefault","data","setState","props","this","React","Component","CRUDSystem","onChangeValue","event","onAddItem","list","concat","onRemoveItem","i","filter","item","j","class","id","pname","onClick","disabled","map","index","key","CreateForm","salary","age","alertn","alerts","alerta","createdAt","UpdateForm","job","alertj","alerti","url","data1","updatedAt","DeleteForm","status","DataList","filterarr","setToggle1","toggle1","setId","setLoadertoggle","apiDatashow","setName","setAge","setSalary","dataw","d","employee_name","employee_age","employee_salary","n","a","s","confirm","results","deleteItem","setToggle","salarya","agea","adata","required","pattern","maxlength","size","title","Loader","Paginationl","maxitem","setFilterarr","maxbtn","nxps","setNxps","active","setActive","fnav","setFnav","paginate","array","page_size","page_number","slice","divider","dl","max","parseInt","pagedvd","length","paginatepage","navdvd","useEffect","step1","pagenav","APICrud","toggle","loadertoggle","setAgea","setSalarya","setData","Pagination","Datashow","tdata","setTdata","tempdata","UpdateItem","onUpdateItems","nvalue","b","uvalue","Details","match","params","detailId","src","avatar","first_name","last_name","PostSlide","avtar","PostSlider","PostSlider1","Page1","Logout","clear","Boolean","hostname","Header","data-toggle","data-target","aria-controls","aria-expanded","aria-label","routing","exact","path","component","Pagination1","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27a42d85.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginForm = p => {\r\n  if (localStorage.token) {\r\n    p.history.push('/');\r\n  }\r\n  // fields\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [remember, setRemember] = useState('');\r\n\r\n  const handleSubmit = () => {\r\n    const url = 'https://reqres.in/api/login';\r\n    const data = {\r\n      email: 'eve.holt@reqres.in',\r\n      password: 'pestol'\r\n    };\r\n\r\n    try {\r\n      fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          if (res.token) {\r\n            localStorage.setItem('token', res.token);\r\n            console.log('token:', res.token);\r\n            p.history.push('/');\r\n            window.location.reload();\r\n            alert('Login Successfully');\r\n          } else {\r\n            alert('Enter valid Email or Password');\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n  console.log('email', email, 'password', password);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form\r\n        className=\"maxw-500 mrtb-100\"\r\n        onSubmit={handleSubmit}\r\n        action=\"javascript:simpleCart.checkout()\"\r\n      >\r\n        <fieldset>\r\n          <legend> Login</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Your Email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n          <button className=\"btn btn-primary\" type=\"submit\">\r\n            Log In\r\n          </button>\r\n        </fieldset>\r\n        Don't have an Account? <Link to=\"/register\">SignUp Here</Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass RegisterForm extends React.Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    alert: ''\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const url = 'https://reqres.in/api/register';\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n\r\n    try {\r\n      fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          if (res.token) {\r\n            alert('Registration is Successfull.');\r\n            this.setState({\r\n              alert: (\r\n                <div className=\"alert alert-success\">Register Successfully</div>\r\n              )\r\n            });\r\n            this.props.history.push('/');\r\n          } else {\r\n            this.setState({\r\n              alert: (\r\n                <div className=\"alert alert-danger\">Somethong went wrong</div>\r\n              )\r\n            });\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"maxw-500 mrtb-100\">\r\n          {this.state.alert}\r\n          <fieldset>\r\n            <legend>\r\n              <solid> Registration</solid>\r\n            </legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"Your Email\"\r\n              value={this.state.email}\r\n              onChange={e => this.setState({ email: e.target.value })}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              value={this.state.password}\r\n              onChange={e => this.setState({ password: e.target.value })}\r\n            />\r\n\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Register\r\n            </button>\r\n          </fieldset>\r\n          Already have an Account! <Link to=\"/\">LogIn</Link>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass CRUDSystem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      list: ['Mohit', 'Aman', 'Lakhwinder']\r\n    };\r\n\r\n    if (localStorage.token) {\r\n    } else {\r\n      this.props.history.push('/login');\r\n    }\r\n  }\r\n\r\n  onChangeValue = event => {\r\n    this.setState({ value: event.target.value });\r\n  };\r\n  onAddItem = () => {\r\n    // not allowed AND not working\r\n    this.setState(state => {\r\n      const list = state.list.concat(state.value);\r\n      return {\r\n        list,\r\n        value: ''\r\n      };\r\n    });\r\n  };\r\n  onRemoveItem = i => {\r\n    this.setState(state => {\r\n      const list = state.list.filter((item, j) => i !== j);\r\n      return {\r\n        list\r\n      };\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div class=\"main\">\r\n          <div class=\"container maxw-700\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label id=\"iss\">Person Name: {this.state.pname} </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Person Name\"\r\n                  className=\"form-control\"\r\n                  value={this.state.value}\r\n                  onChange={this.onChangeValue}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Add Name\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={this.onAddItem}\r\n                  disabled={!this.state.value}\r\n                />\r\n              </div>\r\n            </form>\r\n            <ul class=\"names-ul\">\r\n              {this.state.list.map((item, index) => (\r\n                <li key={item}>\r\n                  {item}\r\n                  <button\r\n                    class=\"crs-btn\"\r\n                    index={index}\r\n                    onClick={() => this.onRemoveItem(index)}\r\n                  >\r\n                    x\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CRUDSystem;\r\n","import React from 'react';\r\n\r\nclass CreateForm extends React.Component {\r\n  state = {\r\n    name: '',\r\n    salary: '',\r\n    age: '',\r\n    data: '',\r\n    alertn: '',\r\n    alerts: '',\r\n    alerta: ''\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const url = 'https://reqres.in/api/users';\r\n    const data = {\r\n      name: this.state.name,\r\n      salary: this.state.salary\r\n    };\r\n\r\n    try {\r\n      fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          console.log('Response:', res);\r\n\r\n          if (this.state.name || this.state.salary) {\r\n            this.setState({ data: res });\r\n            this.setState({ alertn: '' });\r\n            this.setState({ alerts: '' });\r\n          }\r\n          if (this.state.name == '' || this.state.salary == '') {\r\n            this.setState({ data: '' });\r\n          }\r\n          if (this.state.name == '') {\r\n            this.setState({\r\n              alertn: (\r\n                <div className=\"alert alert-danger\">Please Enter Name</div>\r\n              )\r\n            });\r\n          }\r\n          if (this.state.salary == '') {\r\n            this.setState({\r\n              alerts: (\r\n                <div className=\"alert alert-danger\">Please Enter Salary</div>\r\n              )\r\n            });\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"maxw-700 mrtb-100\">\r\n          <fieldset>\r\n            <legend> Create Form</legend>\r\n\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Your Name\"\r\n              className=\"form-control\"\r\n              value={this.state.name}\r\n              onChange={e => this.setState({ name: e.target.value })}\r\n            />\r\n            {this.state.alertn}\r\n            <input\r\n              type=\"number\"\r\n              name=\"job\"\r\n              placeholder=\"Your Salery\"\r\n              className=\"form-control\"\r\n              value={this.state.salary}\r\n              onChange={e => this.setState({ salary: e.target.value })}\r\n            />\r\n            {this.state.alerts}\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Add Data\r\n            </button>\r\n          </fieldset>\r\n          <br />\r\n          <table>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Name</th>\r\n              <th>Salary</th>\r\n              <th>Created At</th>\r\n            </tr>\r\n            <tr>\r\n              <td>{this.state.data.id}</td>\r\n              <td>{this.state.data.name}</td>\r\n              <td>{this.state.data.salary}</td>\r\n              <td>{this.state.data.createdAt}</td>\r\n            </tr>\r\n          </table>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateForm;\r\n","import React from 'react';\r\n\r\nclass UpdateForm extends React.Component {\r\n  state = {\r\n    name: '',\r\n    job: '',\r\n    id: '',\r\n    data: '',\r\n    alertn: '',\r\n    alertj: '',\r\n    alerti: ''\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const url = `https://reqres.in/api/users/${this.state.id}`;\r\n    const data = {\r\n      name: this.state.name,\r\n      job: this.state.job\r\n    };\r\n\r\n    try {\r\n      fetch(url, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          console.error('Response:', res);\r\n\r\n          if (this.state.name || this.state.job || this.state.id) {\r\n            this.setState({ data: res });\r\n            this.setState({ alertn: '' });\r\n            this.setState({ alertj: '' });\r\n            this.setState({ alerti: '' });\r\n          }\r\n          if (\r\n            this.state.job == '' ||\r\n            this.state.name == '' ||\r\n            this.state.id == ''\r\n          ) {\r\n            this.setState({ data: '' });\r\n          }\r\n          if (this.state.name == '') {\r\n            this.setState({\r\n              alertn: (\r\n                <div className=\"alert alert-danger\">Please Enter Name</div>\r\n              )\r\n            });\r\n          }\r\n          if (this.state.job == '') {\r\n            this.setState({\r\n              alertj: <div className=\"alert alert-danger\">Please Enter Job</div>\r\n            });\r\n          }\r\n          if (this.state.id == '') {\r\n            this.setState({\r\n              alerti: <div className=\"alert alert-danger\">Please Enter Id</div>\r\n            });\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.data) {\r\n      var data1 = (\r\n        <tr>\r\n          <td>{this.state.data.name}</td>\r\n          <td>{this.state.data.job}</td>\r\n          <td>{this.state.data.updatedAt}</td>\r\n        </tr>\r\n      );\r\n    } else {\r\n      data1 = '';\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"maxw-700 mrtb-100\">\r\n          <fieldset>\r\n            <legend>Update Form</legend>\r\n            <input\r\n              type=\"number\"\r\n              name=\"id\"\r\n              className=\"form-control\"\r\n              placeholder=\"Your Id\"\r\n              value={this.state.id}\r\n              onChange={e => this.setState({ id: e.target.value })}\r\n            />\r\n            {this.state.alerti}\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className=\"form-control\"\r\n              placeholder=\"Your Name\"\r\n              value={this.state.name}\r\n              onChange={e => this.setState({ name: e.target.value })}\r\n            />\r\n            {this.state.alertn}\r\n            <input\r\n              type=\"text\"\r\n              name=\"job\"\r\n              className=\"form-control\"\r\n              placeholder=\"Your Job\"\r\n              value={this.state.job}\r\n              onChange={e => this.setState({ job: e.target.value })}\r\n            />\r\n            {this.state.alertj}\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Update Data\r\n            </button>\r\n          </fieldset>\r\n          <br />\r\n          <table>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Job</th>\r\n              <th>Updated at</th>\r\n            </tr>\r\n            {data1}\r\n          </table>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateForm;\r\n","import React from 'react';\r\n\r\nclass DeleteForm extends React.Component {\r\n  state = {\r\n    id: '',\r\n    alert: ''\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const url = `https://reqres.in/api/users/${this.state.id}`;\r\n\r\n    try {\r\n      fetch(url, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }).then(res => {\r\n        console.log(res.status);\r\n        if (res.status == 204) {\r\n          this.setState({\r\n            alert: <div className=\"alert alert-success\">Data Deleted</div>\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"maxw-700 mrtb-100\">\r\n          {this.state.alert}\r\n          <fieldset>\r\n            <legend>Delete Form</legend>\r\n            <input\r\n              type=\"number\"\r\n              name=\"name\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter id\"\r\n              value={this.state.id}\r\n              onChange={e => this.setState({ id: e.target.value })}\r\n            />\r\n            <button className=\"btn btn-danger\" type=\"submit\">\r\n              Delete Data\r\n            </button>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteForm;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n//tdata have filtered data\r\nconst DataList = ({\r\n  filterarr,\r\n  setToggle1,\r\n  toggle1,\r\n  setId,\r\n  setLoadertoggle,\r\n  apiDatashow,\r\n  setName,\r\n  setAge,\r\n  setSalary\r\n}) => {\r\n  const deleteItem = i => {\r\n    const url = `http://dummy.restapiexample.com/api/v1/delete/${i}`;\r\n    if (window.confirm('Do you want to delete this?')) {\r\n      setLoadertoggle(true);\r\n      try {\r\n        fetch(url, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n          .then(results => {\r\n            return results.json();\r\n          })\r\n          .then(res => {\r\n            console.log('Delelition Response', res);\r\n            apiDatashow();\r\n            alert('Data Deleted');\r\n          });\r\n      } catch (error) {\r\n        console.error('Deletition Error:', error);\r\n      }\r\n    } else {\r\n    }\r\n  };\r\n\r\n  const updateItem = (i, n, a, s) => {\r\n    setToggle1(!toggle1);\r\n    setId(i);\r\n    setName(n);\r\n    setAge(a);\r\n    setSalary(s);\r\n  };\r\n\r\n  // data is a state which have list of user detail, here && operator used for if jab tak data k pass value nhi jayegi tab tak map function action nhi lega\r\n  const dataw =\r\n    filterarr &&\r\n    filterarr.map((d, index) => {\r\n      return (\r\n        <tr>\r\n          <td className=\"id\">{d.id}</td>\r\n          <td className=\"name\">{d.employee_name}</td>\r\n          <td>{d.employee_age}</td>\r\n          <td>{d.employee_salary}</td>\r\n          <td className=\"action\">\r\n            <button\r\n              className=\"btn btn-info\"\r\n              index={d.id}\r\n              onClick={() =>\r\n                updateItem(\r\n                  d.id,\r\n                  d.employee_name,\r\n                  d.employee_age,\r\n                  d.employee_salary\r\n                )\r\n              }\r\n            >\r\n              Update\r\n            </button>{' '}\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              index={d.id}\r\n              onClick={() => deleteItem(d.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  return (\r\n    <table className=\"datalist\">\r\n      <tr className=\"static-top\">\r\n        <th className=\"id\">Id</th>\r\n        <th className=\"name\">Name</th>\r\n        <th>Age</th>\r\n        <th>Salary</th>\r\n        <th className=\"action\"></th>\r\n      </tr>\r\n      {dataw}\r\n    </table>\r\n  );\r\n};\r\nexport default DataList;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst CreateForm = ({\r\n  apiDatashow,\r\n  setToggle,\r\n  setLoadertoggle,\r\n  salarya,\r\n  agea,\r\n  name,\r\n  setName,\r\n  age,\r\n  setAge,\r\n  salary,\r\n  setSalary\r\n}) => {\r\n  const handleSubmit = e => {\r\n    setLoadertoggle(true);\r\n    e.preventDefault();\r\n\r\n    const url = 'http://dummy.restapiexample.com/api/v1/create';\r\n    const adata = {\r\n      name: name,\r\n      salary: salary,\r\n      age: age\r\n    };\r\n\r\n    try {\r\n      fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(adata),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          console.log('Creation Response:', res);\r\n          apiDatashow();\r\n          setToggle(false);\r\n          alert('Date Submited');\r\n        });\r\n    } catch (error) {\r\n      console.error('Creation Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mrtb-30\">\r\n      <form onSubmit={handleSubmit}>\r\n        <fieldset>\r\n          <legend> Create Form</legend>\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"form-control\"\r\n            required=\"required\"\r\n            placeholder=\"Your Unique Name\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"age\"\r\n            className=\"form-control\"\r\n            required=\"required\"\r\n            placeholder=\"Your Age\"\r\n            value={age}\r\n            pattern=\"[0-9]{3}\"\r\n            maxlength=\"8\"\r\n            size=\"10\"\r\n            title=\"Enter Valid age\"\r\n            onChange={e => setAge(e.target.value)}\r\n          />\r\n          <div className=\"alertred\">{agea}</div>\r\n          <input\r\n            type=\"number\"\r\n            name=\"salery\"\r\n            className=\"form-control\"\r\n            required=\"required\"\r\n            placeholder=\"Your Salery\"\r\n            value={salary}\r\n            pattern=\"[0-9]{10}\"\r\n            maxlength=\"10\"\r\n            title=\"Enter Valid salery\"\r\n            onChange={e => setSalary(e.target.value)}\r\n          />\r\n          <div className=\"alertred\">{salarya}</div>\r\n          <button className=\"btn btn-primary\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateForm;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst UpdateForm = ({\r\n  id,\r\n  setToggle1,\r\n  setLoadertoggle,\r\n  apiDatashow,\r\n  name,\r\n  setName,\r\n  age,\r\n  setAge,\r\n  salary,\r\n  setSalary,\r\n  agea,\r\n  salarya\r\n}) => {\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    setLoadertoggle(true);\r\n    const url = `http://dummy.restapiexample.com/api/v1/update/${id}`;\r\n    const data = {\r\n      name: name,\r\n      salary: salary,\r\n      age: age\r\n    };\r\n\r\n    try {\r\n      fetch(url, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          console.error('Updation Response:', res);\r\n          apiDatashow();\r\n        });\r\n    } catch (error) {\r\n      console.error('Updattion Error:', error);\r\n    }\r\n    setToggle1(false);\r\n  };\r\n  return (\r\n    <>\r\n      <form className=\"\" onSubmit={handleSubmit}>\r\n        <div className=\"label1\">\r\n          You have update this Id: <span>{id}</span>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"form-control\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Unique Name\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"age\"\r\n          className=\"form-control\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Age\"\r\n          value={age}\r\n          onChange={e => setAge(e.target.value)}\r\n        />\r\n        <div className=\"alertred\">{agea}</div>\r\n        <input\r\n          type=\"number\"\r\n          name=\"salery\"\r\n          className=\"form-control\"\r\n          required=\"required\"\r\n          placeholder=\"Enter Salary\"\r\n          value={salary}\r\n          onChange={e => setSalary(e.target.value)}\r\n        />\r\n        <div className=\"alertred\">{salarya}</div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Update\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateForm;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader pos-fixed\">\r\n      <div>\r\n        <i className=\"fa fa-spinner fa-spin\" /> Loading...\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from 'react';\r\nconst Paginationl = ({ data, maxitem, setFilterarr, maxbtn }) => {\r\n  //setFilterarr = filtered data\r\n  //maxitem = number of items in single page\r\n  //maxbtn = number of button in single pagination\r\n\r\n  //next prev counter\r\n  const [nxps, setNxps] = useState(1);\r\n  // active page state\r\n  const [active, setActive] = useState(1);\r\n  //filtered nav button\r\n  const [fnav, setFnav] = useState('');\r\n\r\n  // Pagination Function\r\n  const paginate = (array, page_size, page_number) => {\r\n    --page_number; // because pages logically start with 1, but technically with 0\r\n    return array.slice(page_number * page_size, (page_number + 1) * page_size);\r\n  };\r\n\r\n  //using this function get only integer value if reminder is not zero then incerese to 1\r\n  const divider = (dl, max) => {\r\n    if (dl % max == 0) {\r\n      return dl / max;\r\n    } else {\r\n      return parseInt(dl / max) + 1;\r\n    }\r\n  };\r\n\r\n  //number of pages\r\n  var pagedvd = divider(data.length, maxitem);\r\n  var paginatepage = [];\r\n  for (var i = 1; i <= pagedvd; i++) {\r\n    paginatepage.push(i);\r\n  }\r\n  //paginatepage.length = number of button\r\n  //navdvd = number of buttons in single nav\r\n  var navdvd = divider(paginatepage.length, maxbtn);\r\n\r\n  const Datashow = () => {\r\n    setFilterarr(paginate(data, maxitem, active));\r\n    setFnav(paginate(paginatepage, maxbtn, nxps));\r\n  };\r\n\r\n  useEffect(() => {\r\n    Datashow();\r\n  }, []);\r\n  // [] is used to prevent fron infinite loop\r\n\r\n  const step1 = s => {\r\n    setActive(s);\r\n    setFilterarr(paginate(data, maxitem, s));\r\n  };\r\n\r\n  const Next = () => {\r\n    setNxps(nxps + 1);\r\n    if (nxps == navdvd) {\r\n      setNxps(1);\r\n      setFnav(paginate(paginatepage, maxbtn, nxps - 1));\r\n    }\r\n    setFnav(paginate(paginatepage, maxbtn, nxps));\r\n  };\r\n\r\n  const Prev = () => {\r\n    setNxps(nxps - 1);\r\n    if (nxps == 1) {\r\n      setNxps(navdvd);\r\n      setFnav(paginate(paginatepage, maxbtn, nxps + 1));\r\n    }\r\n    setFnav(paginate(paginatepage, maxbtn, nxps));\r\n  };\r\n\r\n  const pagenav =\r\n    fnav &&\r\n    fnav.map((d, i) => {\r\n      if (d == active) {\r\n        return (\r\n          <li className=\"nav-item\">\r\n            <button className=\"btn btn-primary\" onClick={() => step1(d)}>\r\n              {d}\r\n            </button>\r\n          </li>\r\n        );\r\n      } else {\r\n        return (\r\n          <li className=\"nav-item\">\r\n            <button className=\"btn btn-success\" onClick={() => step1(d)}>\r\n              {d}\r\n            </button>\r\n          </li>\r\n        );\r\n      }\r\n    });\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <button className=\"btn btn-primary\" onClick={() => Prev()}>\r\n        Prev\r\n      </button>\r\n      <ul className=\"pagination-ul\">{pagenav}</ul>\r\n      <button className=\"btn btn-primary\" onClick={() => Next()}>\r\n        Next\r\n      </button>\r\n      page divider{pagedvd}\r\n      <br />\r\n      nav divider{navdvd}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginationl;\r\n","import React, { useState, useEffect } from 'react';\r\nimport DataList from '../components/apicrud/DateList';\r\nimport CreateForm from '../components/apicrud/CreateForm';\r\nimport UpdateForm from '../components/apicrud/UpdateForm';\r\nimport Loader from '../components/apicrud/Loader';\r\nimport Paginationl from '../components/Paginationl';\r\n\r\nconst APICrud = () => {\r\n  //This state used for toggling a CreateForm component\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  //This state used for toggling a UpdateForm component\r\n  const [toggle1, setToggle1] = useState(false);\r\n\r\n  //This state used for toggling a loader\r\n  const [loadertoggle, setLoadertoggle] = useState(true);\r\n\r\n  // This state used for get id from parent to child components(UpdateForm component and Datalist component),\r\n  // this state work as global variable\r\n  const [id, setId] = useState(null);\r\n\r\n  //form fields\r\n  const [name, setName] = useState('');\r\n  const [age, setAge] = useState('');\r\n  const [salary, setSalary] = useState('');\r\n\r\n  //form alerts\r\n  const [agea, setAgea] = useState('');\r\n  const [salarya, setSalarya] = useState('');\r\n\r\n  //This  is used for store user data list\r\n  const [data, setData] = useState('');\r\n\r\n  //filtered data\r\n  const [filterarr, setFilterarr] = useState('');\r\n  const maxbtn = 4;\r\n  const maxitem = 10;\r\n\r\n  //validation\r\n  if (age > 110) {\r\n    setAgea('Please Enter valid Age');\r\n    setAge('');\r\n  }\r\n\r\n  if (salary > 10000000) {\r\n    setSalarya('Please Enter valid Salary');\r\n    setSalary('');\r\n  }\r\n\r\n  //fetch all data using this function\r\n  const apiDatashow = () => {\r\n    fetch('http://dummy.restapiexample.com/api/v1/employees')\r\n      .then(results => {\r\n        return results.json();\r\n      })\r\n      .then(data1 => {\r\n        setData(data1);\r\n        setFilterarr(data1.slice(0, maxitem));\r\n        console.log('Data List', filterarr);\r\n        setLoadertoggle(false);\r\n      });\r\n  };\r\n\r\n  //auto reload\r\n  useEffect(() => {\r\n    apiDatashow();\r\n  }, []);\r\n  // [] is used to prevent fron infinite loop\r\n\r\n  //show create form\r\n  const addItem = () => {\r\n    setToggle(!toggle);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"overflow-auto\">\r\n            <DataList\r\n              filterarr={filterarr}\r\n              name={name}\r\n              setName={setName}\r\n              setLoadertoggle={setLoadertoggle}\r\n              age={age}\r\n              setAge={setAge}\r\n              salary={salary}\r\n              setSalary={setSalary}\r\n              data={data}\r\n              apiDatashow={apiDatashow}\r\n              toggle1={toggle1}\r\n              setToggle1={setToggle1}\r\n              setId={setId}\r\n            />\r\n          </div>\r\n          <div className=\"position-absuform\">\r\n            {toggle1 && (\r\n              <UpdateForm\r\n                salarya={salarya}\r\n                agea={agea}\r\n                name={name}\r\n                setLoadertoggle={setLoadertoggle}\r\n                setName={setName}\r\n                age={age}\r\n                setAge={setAge}\r\n                salary={salary}\r\n                setSalary={setSalary}\r\n                apiDatashow={apiDatashow}\r\n                toggle1={toggle1}\r\n                setToggle1={setToggle1}\r\n                id={id}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          {/* if 'toggle' variable is true then show 'create form' else null */}\r\n          {/* {toggle ?<CreateForm/>:null} */}\r\n          {/* if both variables(toggle,CreateForm) true then show create form */}\r\n          {toggle && (\r\n            <CreateForm\r\n              name={name}\r\n              setName={setName}\r\n              age={age}\r\n              setAge={setAge}\r\n              salary={salary}\r\n              setSalary={setSalary}\r\n              salarya={salarya}\r\n              agea={agea}\r\n              apiDatashow={apiDatashow}\r\n              setToggle={setToggle}\r\n              setLoadertoggle={setLoadertoggle}\r\n            />\r\n          )}\r\n          {loadertoggle && <Loader />}\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <Paginationl\r\n            data={data}\r\n            setFilterarr={setFilterarr}\r\n            maxitem={maxitem}\r\n            maxbtn={maxbtn}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4 text-right\">\r\n          <button onClick={addItem} className=\"btn btn-primary\">\r\n            Add Item\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default APICrud;\r\n","/* Pagination Component \r\n-------------------------------------------------*/\r\nimport React, { useState, useEffect } from 'react';\r\nimport Paginationl from '../components/Paginationl';\r\n\r\nconst Pagination = () => {\r\n  const dataa = [\r\n    {\r\n      id: 1,\r\n      name: 'mohit',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'mohifdt',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'mogfghit',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'mohigfgt',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'mogfgfdhit',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'mohdgit',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 7,\r\n      name: 'mofghit',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 8,\r\n      name: 'dddmohit',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 9,\r\n      name: 'msdohit',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'mohifffft',\r\n      age: 22,\r\n      salary: 600000\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    Datashow();\r\n  }, []);\r\n  // [] is used to prevent fron infinite loop\r\n\r\n  const Datashow = () => { };\r\n\r\n  const [tdata, setTdata] = useState('');\r\n\r\n  //Filtered data\r\n  const tempdata =\r\n    tdata &&\r\n    tdata.map((d, i) => {\r\n      return (\r\n        <tr>\r\n          <td>{d.id}</td>\r\n          <td className=\"name\">{d.name}</td>\r\n          <td>{d.age}</td>\r\n          <td>{d.salary}</td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h5>Data 1</h5>\r\n      <table className=\"datalist\">\r\n        <tr className=\"static-top\">\r\n          <th>Id</th>\r\n          <th className=\"name\">Name</th>\r\n          <th>Age</th>\r\n          <th>Salary</th>\r\n        </tr>\r\n        {tempdata}\r\n      </table>\r\n      <Paginationl\r\n        data={dataa}\r\n        setFilterarr={setTdata}\r\n        maxitem={3}\r\n        maxbtn={2}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\nclass UpdateItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [42, 33, 68],\r\n      nvalue: '',\r\n      uvalue: ''\r\n    };\r\n    if (localStorage.token) {\r\n    } else {\r\n      this.props.history.push('/login');\r\n    }\r\n  }\r\n  onUpdateItems = () => {\r\n    const a = this.state.nvalue;\r\n    const b = this.state.uvalue;\r\n    this.setState(state => {\r\n      this.state.list[a] = b;\r\n    });\r\n    return true;\r\n  };\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <ul class=\"names-ul\">\r\n          {this.state.list.map(item => (\r\n            <li key={item}>The person is {item} years old.</li>\r\n          ))}\r\n        </ul>\r\n        <form class=\"update-form\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter value witch you  have to Update\"\r\n              value={this.state.nvalue}\r\n              onChange={e => this.setState({ nvalue: e.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter value to Update\"\r\n              value={this.state.uvalue}\r\n              onChange={e => this.setState({ uvalue: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary\"\r\n              onClick={this.onUpdateItems}\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default UpdateItem;\r\n","//useState use for State in Function component\r\n//useEfffect use as componentDidMount() function in function component\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Details = ({ match }) => {\r\n  //here data is state variable, setData is a function whitch have value of data variable\r\n  const [data, setData] = useState('mohit');\r\n  useEffect(\r\n    () => {\r\n      //here match is a prop\r\n      //'match.params.detailId' have page id , this is used for dynamic page, detailId is props value from Router in the pages.js file\r\n      fetch(`https://reqres.in/api/users/${match.params.detailId}`)\r\n        .then(results => {\r\n          return results.json();\r\n        })\r\n        .then(data1 => {\r\n          //update value of data state variable\r\n          setData(data1.data);\r\n        });\r\n    },\r\n    []\r\n\r\n    //here '[]' is used for, loop se bachne k liye\r\n  );\r\n\r\n  console.log('list', data);\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        <div className=\"container\">\r\n          <div className=\"porson-img-container\">\r\n            <img src={data.avatar} className=\"person-img\" />\r\n          </div>\r\n          <p>\r\n            <strong>User Name:</strong> {data.first_name} {data.last_name}\r\n          </p>\r\n          <p>\r\n            <strong>User Email:</strong> {data.email}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostSlide = props => {\r\n  return (\r\n    <div className=\"post-slider\">\r\n      <Link to={`/details/${props.id}`}>\r\n        <img src={props.avtar} className=\"post-img\" />\r\n      </Link>\r\n      <strong>Name</strong> {props.name}\r\n      <br />\r\n      <strong>Email</strong> {props.email}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostSlide;\r\n","import React from 'react';\r\nimport PostSlide from './PostSlide';\r\n\r\nconst PostSlider = props => {\r\n  var datas = [\r\n    {\r\n      name: 'mohit',\r\n      email: 'abc@123',\r\n      avtar: '/img/bg.png'\r\n    },\r\n    {\r\n      name: 'Lakhwinder',\r\n      email: 'abc@123',\r\n      avtar: '/img/Desert.jpg'\r\n    },\r\n    {\r\n      name: 'Vipin',\r\n      email: 'abc@123',\r\n      avtar: '/img/Hydrangeas.jpg'\r\n    },\r\n    {\r\n      name: 'Aman',\r\n      email: 'abc@123',\r\n      avtar: '/img/Jellyfish.jpg'\r\n    },\r\n    {\r\n      name: 'Jatin',\r\n      email: 'abc@123',\r\n      avtar: '/img/Penguins.jpg'\r\n    }\r\n  ];\r\n\r\n  const data1 = datas.map((d, index) => {\r\n    return <PostSlide name={d.name} email={d.email} avtar={d.avtar} />;\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"blog-slider\">{data1}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostSlider;\r\n","import React, { Component } from 'react';\r\nimport PostSlide from './PostSlide';\r\n\r\nclass PostSlider1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [] // fetch all fields in this state\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://reqres.in/api/users/?results=500')\r\n      .then(results => {\r\n        return results.json();\r\n      })\r\n      .then(data1 => {\r\n        // here data = parent field from api\r\n        //lists is a variable\r\n\r\n        this.setState({ data: data1.data });\r\n        console.log('State', this.state.data);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const data = this.state.data.map((data, index) => {\r\n      return (\r\n        // Here id, name, email are props of PostSlide Component\r\n        <PostSlide\r\n          id={data.id}\r\n          name={`${data.first_name} ${data.last_name}`}\r\n          email={data.email}\r\n          avtar={data.avatar}\r\n        />\r\n      );\r\n    });\r\n\r\n    return <div className=\"blog-slider\">{data}</div>;\r\n  }\r\n}\r\nexport default PostSlider1;\r\n","import React, { Component } from 'react';\r\nimport PostSlider1 from '../components/PostSlider1';\r\nconst Page1 = props => {\r\n  if (localStorage.token) {\r\n  } else {\r\n    props.history.push('/login');\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        <div className=\"container\">\r\n          <PostSlider1 />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page1;\r\n","import React from 'react';\r\nconst Logout = p => {\r\n  localStorage.clear();\r\n  p.history.push('/');\r\n  return Logout;\r\n};\r\n\r\nexport default Logout;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst Header = () => {\r\n  if (localStorage.token) {\r\n    return (\r\n      <header class=\"bg-info text-white main-header\">\r\n        <div class=\"container\">\r\n          <nav class=\"navbar navbar-expand-lg navbar-light\">\r\n            <a class=\"navbar-brand\">\r\n              <Link to=\"/\">\r\n                <img src=\"logo.png\" />\r\n              </Link>\r\n            </a>\r\n            <button\r\n              class=\"navbar-toggler bg-light\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul class=\"navbar-nav mr-left-auto\">\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link\">\r\n                    <Link to=\"/postslider1\">Dynamic Page</Link>\r\n                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link\">\r\n                    <Link to=\"/apicrud\">API Crud</Link>\r\n                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link\">\r\n                    <Link to=\"/crudsystem\">CRUDSystem</Link>\r\n                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link\">\r\n                    <Link to=\"/createform\">Create Form</Link>\r\n                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link\">\r\n                    <Link to=\"/updateform\">Update Form</Link>\r\n                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link\">\r\n                    <Link to=\"/deleteform\">Delete Form</Link>\r\n                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link\">\r\n                    <Link to=\"/logout\">logout</Link>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n    );\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\nexport default Header;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport { Route, BrowserRouter as Router1 } from 'react-router-dom'\r\nimport LoginForm from './pages/LoginForm'\r\nimport RegisterForm from './pages/Register'\r\nimport CRUDSystem from \"./pages/CRUDSystem\"\r\nimport CreateForm from './pages/CreateForm'\r\nimport UpdateForm from './pages/UpdateForm'\r\nimport DeleteForm from './pages/DeleteForm'\r\nimport APICrud from './pages/Apicrud'\r\nimport Pagination1 from './pages/Pagination'\r\nimport UpdateItem from \"./pages/UpdateItem\"\r\nimport Details from './pages/Details'\r\nimport PostSlider from './components/PostSlider'\r\nimport Page1 from './pages/Page1'\r\nimport Logout from './pages/Logout'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport Header from './components/Header'\r\n\r\nconst routing = (\r\n  <>\r\n\r\n  <Router1>\r\n  <Header/>\r\n      <Route exact path=\"/\" component={Page1} />\r\n      <Route path=\"/login\" component={LoginForm} />\r\n      <Route path=\"/register\" component={RegisterForm} />\r\n      <Route path=\"/logout\" component={Logout}/>\r\n      \t\t  <Route path=\"/crudsystem\" component={CRUDSystem}/>\r\n            <Route path=\"/createform\" component={CreateForm}/>\r\n            <Route path=\"/updateform\" component={UpdateForm}/>\r\n            <Route path=\"/deleteform\" component={DeleteForm}/>\r\n            <Route path=\"/updateitem\" component={UpdateItem}/>\r\n            <Route path=\"/pagination\" component={Pagination1}/>\r\n            <Route path=\"/apicrud\" component={APICrud}/>\r\n            <Route path=\"/details/:detailId\" component={Details}/>\r\n            <Route path=\"/postslider\" component={PostSlider}/>\r\n            <Route path=\"/postslider1\" component={Page1}/>\r\n  </Router1>\r\n  </>\r\n)\r\nReactDOM.render(routing, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}